apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: default
  labels:
    app: art-knowledge-graph
    service: auth
    tier: backend
    component: authentication
spec:
  replicas: 2
  selector:
    matchLabels:
      app: art-knowledge-graph
      service: auth
  template:
    metadata:
      labels:
        app: art-knowledge-graph
        service: auth
        tier: backend
        component: authentication
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: auth-service
        image: art-knowledge-graph/auth-service:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        resources:
          requests:
            cpu: "512m"
            memory: "1Gi"
          limits:
            cpu: "1"
            memory: "2Gi"
        envFrom:
        - configMapRef:
            name: backend-config
        - secretRef:
            name: backend-secrets
        - secretRef:
            name: database-secrets
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 2
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0